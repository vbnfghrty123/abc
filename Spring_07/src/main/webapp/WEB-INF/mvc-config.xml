<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.1.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.2.xsd">

	<!-- Uncomment and your base-package here: <context:component-scan base-package="org.springframework.samples.web"/> -->


	<mvc:annotation-driven />
	
	<tx:annotation-driven
		transaction-manager="transactionManager" />
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- Example: a logical view name of 'showMessage' is mapped to '/WEB-INF/jsp/showMessage.jsp' -->
		<property name="prefix" value="/WEB-INF/view/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<context:component-scan
		base-package="com.tje.controller" />
	<context:component-scan
		base-package="com.tje.dao" />
	<context:component-scan
		base-package="com.tje.model" />
	<context:component-scan
		base-package="com.tje.services" />
		
		<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>  
		<!-- 웹소켓 처리해주는 핸들러 -->
		<websocket:handlers>
		
		<!-- handler = "직접 만든 클래스" 웹소켓 통신에 /echo 오면 echoHandler 처리 -->
		<websocket:mapping handler="echoHandler" path="/echo"/>
		<!-- 웹소켓 세션과 기존의 session 을 결합하여 사용하겠다 ex)) 기존 session 에 address 설정 시 websocket 에서도 사용 가능-->
		<websocket:handshake-interceptors>
		<bean class ="org.springframework.web.socket.server.support.HttpSessionHandshakeInterceptor"/>
		</websocket:handshake-interceptors>
		<websocket:sockjs/>
		</websocket:handlers>
		<bean id="echoHandler" class="com.tje.websocket.EchoHandler"/>
</beans>
